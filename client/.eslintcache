[{"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\index.js":"1","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\App.js":"2","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Login.js":"3","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\hooks\\useLocalStorage.js":"4","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Dashboard.js":"5","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Sidebar.js":"6","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Conversations.js":"7","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Contacts.js":"8","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\NewContactsModal.js":"9","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\NewConversationsModal.js":"10","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\contexts\\ContactsProvider.js":"11","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\contexts\\ConversationsProvider.js":"12"},{"size":245,"mtime":1608391963038,"results":"13","hashOfConfig":"14"},{"size":630,"mtime":1608477855032,"results":"15","hashOfConfig":"14"},{"size":916,"mtime":1608395559599,"results":"16","hashOfConfig":"14"},{"size":676,"mtime":1608397694674,"results":"17","hashOfConfig":"14"},{"size":242,"mtime":1608406115144,"results":"18","hashOfConfig":"14"},{"size":2032,"mtime":1608478405071,"results":"19","hashOfConfig":"14"},{"size":391,"mtime":1608480617560,"results":"20","hashOfConfig":"14"},{"size":485,"mtime":1608410148654,"results":"21","hashOfConfig":"14"},{"size":1198,"mtime":1608409808360,"results":"22","hashOfConfig":"14"},{"size":1872,"mtime":1608478508353,"results":"23","hashOfConfig":"14"},{"size":621,"mtime":1608409742817,"results":"24","hashOfConfig":"14"},{"size":1308,"mtime":1608480570273,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"obhti4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\index.js",[],["53","54"],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\App.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Login.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\hooks\\useLocalStorage.js",["55"],"import React,{useEffect,useState} from 'react'\r\n\r\n\r\nconst PREFIX = 'zap-clone'\r\nconst useLocalStorage = (key,initialValue) => {\r\n    const prefixedKey = PREFIX + key\r\n    const [value,setValue] = useState(() =>{\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n        if (typeof initialValue === 'function'){\r\n            return initialValue()\r\n        }else {\r\n            return initialValue\r\n        }\r\n    })\r\n    \r\n    useEffect (()=>{\r\n        localStorage.setItem(prefixedKey,JSON.stringify(value))\r\n    },[prefixedKey,value])\r\n    return [value,setValue]\r\n}\r\n\r\nexport default useLocalStorage\r\n","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Dashboard.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Sidebar.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Conversations.js",["56"],"import React from 'react'\r\nimport {ListGroup} from 'react-bootstrap'\r\nconst Conversations = () => {\r\n    return (\r\n        <ListGroup variant=\"flush\">\r\n            {contacts.map(contact => (\r\n                <ListGroup.Item key={contact.id}>\r\n                {contact.name}\r\n                </ListGroup.Item>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default Conversations\r\n","C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\Contacts.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\NewContactsModal.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\Components\\NewConversationsModal.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\contexts\\ContactsProvider.js",[],"C:\\Users\\pires\\Desktop\\pjt\\chat\\client\\src\\contexts\\ConversationsProvider.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"65","severity":2,"message":"66","line":6,"column":14,"nodeType":"63","messageId":"67","endLine":6,"endColumn":22},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-undef","'contacts' is not defined.","undef","no-global-assign","no-unsafe-negation"]